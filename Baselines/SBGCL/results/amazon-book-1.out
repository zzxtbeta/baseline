Namespace(alpha=0.8, augment='delete', beta=0.0005, dataset='amazon-book-1', debug=False, dim_embs=32, dropout=0.5, epochs=2000, lr=0.005, mask_ratio=0.1, no_cuda=False, predictor='2-linear', seed=2023, tau=0.05)
Traceback (most recent call last):
  File "train.py", line 191, in <module>
    x_pos_index_a_b_4, x_neg_index_a_b_4= model(edges, x)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yrgu/topic/baseline/Baselines/SBGCL/sbgrl.py", line 143, in forward
    x_pos_index_a_1 = self.layers_a_a_pos[0](x_pos_index_a_1, pos_index_a_1)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py", line 255, in forward
    out = self.propagate(edge_index, x=x, alpha=alpha, size=size)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 480, in propagate
    out = self.aggregate(out, **aggr_kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 604, in aggregate
    return self.aggr_module(inputs, index, ptr=ptr, dim_size=dim_size,
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/experimental.py", line 115, in wrapper
    return func(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/aggr/base.py", line 133, in __call__
    raise e
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/aggr/base.py", line 125, in __call__
    return super().__call__(x, index=index, ptr=ptr, dim_size=dim_size,
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/aggr/basic.py", line 22, in forward
    return self.reduce(x, index, ptr, dim_size, dim, reduce='sum')
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/aggr/base.py", line 176, in reduce
    return scatter(x, index, dim, dim_size, reduce)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/utils/scatter.py", line 70, in scatter
    return src.new_zeros(size).scatter_add_(dim, index, src)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 41.47 GiB. GPU 0 has a total capacty of 79.15 GiB of which 22.96 GiB is free. Process 1324627 has 27.92 GiB memory in use. Process 2335790 has 1.00 GiB memory in use. Process 2937290 has 2.26 GiB memory in use. Including non-PyTorch memory, this process has 24.73 GiB memory in use. Of the allocated memory 22.92 GiB is allocated by PyTorch, and 1.33 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
