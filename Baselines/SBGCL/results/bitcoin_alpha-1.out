../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [45,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [64,0,0], thread: [35,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [23,0,0], thread: [2,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [40,0,0], thread: [37,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [56,0,0], thread: [101,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [55,0,0], thread: [71,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [40,0,0], thread: [115,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [64,0,0], thread: [88,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [60,0,0], thread: [64,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [60,0,0], thread: [83,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [74,0,0], thread: [99,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [68,0,0], thread: [81,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
../aten/src/ATen/native/cuda/Indexing.cu:1292: indexSelectLargeIndex: block: [68,0,0], thread: [60,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
Namespace(alpha=0.8, augment='delete', beta=0.0005, dataset='bitcoin_alpha-1', debug=False, dim_embs=32, dropout=0.5, epochs=2000, lr=0.005, mask_ratio=0.1, no_cuda=False, predictor='2-linear', seed=2023, tau=0.05)
Traceback (most recent call last):
  File "train.py", line 191, in <module>
    x_pos_index_a_b_4, x_neg_index_a_b_4= model(edges, x)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yrgu/topic/baseline/Baselines/SBGCL/sbgrl.py", line 97, in forward
    x_pos_index_a_b_1 = self.layers_a_b_pos[0](x_pos_index_a_b_1, pos_index_a_b_1)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py", line 252, in forward
    alpha = self.edge_updater(edge_index, alpha=alpha, edge_attr=edge_attr)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 527, in edge_updater
    out = self.edge_update(**edge_kwargs)
  File "/home/yrgu/miniconda3/envs/experiment/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py", line 283, in edge_update
    alpha = alpha_j if alpha_i is None else alpha_j + alpha_i
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.


# 在实现索引选择时，需要确保索引的范围在合理的范围内。如果传入的索引超出了待选择张量的维度范围，就会导致索引越界错误。